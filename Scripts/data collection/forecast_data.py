#%%
from os import access
import pandas as pd
import holidays as hc
from io import BytesIO
from osiris.core.azure_client_authorization import ClientAuthorization
from osiris.apis.egress import Egress
from configparser import ConfigParser

#%%
config = ConfigParser()
config.read('conf.ini')

token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJodHRwczovL3N0b3JhZ2UuYXp1cmUuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZjc2MTkzNTUtNmM2Ny00MTAwLTlhNzgtMTg0N2YzMDc0MmUyLyIsImlhdCI6MTY0OTE2NjE5NywibmJmIjoxNjQ5MTY2MTk3LCJleHAiOjE2NDkxNzA3ODQsImFjciI6IjEiLCJhaW8iOiJBU1FBMi84VEFBQUFzWUNXTzZ5U29LMnZ5VVpXZVZnd25xcTFUM2tWeDA0bitnZkl5TDA4bjY0PSIsImFtciI6WyJwd2QiLCJyc2EiXSwiYXBwaWQiOiJkOWNkNTIwZS0yMzE3LTRkYjYtYTVhZS03N2YwOTQ5MDg1YWYiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6IjMxMTI3YmIxLWY5OGMtNGNiOS1iMzdhLWJlZDY3NGMxZTI1MSIsImZhbWlseV9uYW1lIjoiw5hzdGVyZ2FhcmQgSGFuc2VuIiwiZ2l2ZW5fbmFtZSI6Ik1hdGhpYXMiLCJncm91cHMiOlsiZjg3N2JhMDMtNTk2Zi00NmM5LTkxNWEtNzhmYjQyOWZiNDZjIiwiZjAzYzJhZDktMTFhNi00MDIxLTgxM2EtYjEyNDc0N2QwMDBhIiwiMTllMjIwNTgtOTk3ZS00Y2FjLTg0MjUtYWM1MTA0YzEyNjIyIiwiNjk5YWQ0YWEtZTdmYS00M2NlLTgzM2UtNzg1ZjI4NzBmZjk5IiwiZGM3MzY5ZTYtOGFmNC00YTYyLTk3NWUtODAzNTFjNDUwMWMzIiwiNjFjNzRkMTQtOTU1My00MzUxLWFmNGEtZGUwM2I5MmMyZmRiIiwiMTQ5NTlkNTEtYjAzMy00ZTI1LWFkODUtMjFhM2QzZDZkMzIyIiwiNTU5Y2QyNWUtZGQxMC00YjY1LWJkNWItNDBhMGM1NmU2YzlkIiwiNjQ5ZWRjZGQtOGU3Yy00YjBkLWJiYzgtMTIxYTMzZTlhZDM0IiwiNmQ5ZTlhZWYtZjAzNy00ZDU5LTlmZWYtZmU0NWYyNzAwM2NjIiwiZGE2OWMyMmItMWFiMC00MGRhLTk1NzktMDBiN2MyYWU1MjVjIiwiMDJhZDhiY2ItNjBjNi00OTY4LWJjNTEtMjA2N2YyYWU4ODE2IiwiZGYxMzRjMmQtZjIzYS00Y2ZkLWExYzgtZWI1MjgzMjUyYmQwIiwiZDdmMjZhNzMtOWE5OC00NjQ4LTk1YmEtNDAyNWY1NDNmNWRkIiwiODg0MmM3NjYtNDc4ZS00ZmNkLTg5MDItNGFhZDBjMmY3YmE3IiwiMDhlZmYwMmUtNDEwMi00NWY3LWIwYjktYTUyNzU4YWMzYTZhIiwiMGMwYzNjZGYtMGJhOC00NjA4LWFiMTYtMjk2YWI2YWVjZjY5IiwiNzBiOGNiN2MtY2Y4Yy00ODA4LTgyMGItYjE0OGJmOGJhNTJmIiwiYWE0MmZhMDItYjIwMi00ZGI1LTk2MzktMjM1OWIyMzNhODIyIiwiYmQ5MTEyYTctMTIwNy00YWU0LWJkZjYtYzhiMTdlZjQ2YmI3IiwiMmE1M2FmYmQtMDBkOC00NDk0LTk3NjItYTg3Y2VlODkxYTZhIiwiYTQ5NTE5ODctNTJhNS00ZWVmLThjZTMtNThjYzc4NjgwNjQyIiwiYjk1MDU4MzEtYTFmYy00YjI2LWI2YmMtMWMxMTNiOWExY2U3IiwiYjI5NWFlODItYjg1My00YTU5LThlMDYtNWZlNWNjMGQzMmFmIiwiNGI0OGZkNjgtNmQ0My00N2RjLTg0MTgtMWYzMGZlNDhlYTQxIiwiZjdmZTIyYmItOWUxZS00ZGRkLThhNzAtMWMxNDRjMWU1ZmRlIiwiNzU1YzY3ZjMtMDU0Yy00NTkwLWI2ZWEtZTlmY2I2ODVhMjJmIiwiYmJjZWRlYjYtZGExNy00ZjhkLWFkN2EtODRlYjY4NzFmZTFjIiwiODdiZmI5MjQtZWFmYS00ZjRjLWIzNzMtYmI2MThjODM5M2Q3IiwiZjhiODI0OTgtMmQxOC00ZGRjLTk4YWItMTNmNWI1MGM4MGE4IiwiOTJlNDlhMjktOTRkZS00MGJiLWExNzktNDBkY2JkNmI5YmM5IiwiNzU5ZGYzNTktN2YwNi00YjM5LWJkOTMtNmY3ZTE4MDJhMGJjIiwiOGI5ZTg4NmUtMzQyYi00MTRiLTkwNjUtODgwYTgzNDdmOWJmIiwiOGEyN2M4YmEtZmMwMi00MDg3LTg1NzMtNGU0MDVlNDFiNmJjIiwiZDdhOTgzNDMtNzZkMy00MTkzLWE4MDItNmY3ZDEyYTYyZjBmIiwiM2QzODU1NjctMTc0ZC00MWMxLTkyMTYtNTRhMzRiYjA2NjZlIiwiZWVkZDI5NDYtMDBiNi00MWU2LWE2NTAtNjQ1YjVlNTc0NWMzIiwiOWMxNjFkYzItNDc1MS00Zjc2LTkwMjYtMTM5MDBjNzBjMGMyIiwiNzY0ODRiZTktM2FlNi00NDc3LWJkNmEtYWFjN2QyNDZmODRjIiwiM2U0NjA5ZmQtNDY2OC00OWZkLWFkN2UtOGIwOTEyNGE4OTMzIiwiNDc0YTU5NDUtMzcxMC00MDY3LTllZDAtZWRmMWVkY2M1ZGEwIiwiNzY4YjQxMDEtMTg0Yy00Y2M0LWE0ZTItODMzYmE0ZTFlNzU4IiwiMTljNjhhMTItMmE3Yy00MjI1LThmNWItZjAxZjE5NmUxZjk4IiwiYzY4OTJkZjQtNWM0NS00YzdhLTgxNDgtZTFiOTExNmI2MjAyIiwiZDI1MmVjMDEtNzJlOC00ODRiLTkwZGYtZjlkMDhiOThlMWM5IiwiODI3NzJmYjUtZWZiOS00NjZlLTg1NGItMDdmNmQxMmM1NGVlIiwiMjM5YmFkZmEtOThiMS00ZTIxLWJiNDAtZTgyNDFjNDMzMmNhIiwiZjYxZGM3MWYtMTU5Zi00MDZjLThjNTItNDdjM2I2Y2I2OGZlIiwiZjFlNWViMmItNzA1Zi00ZjdkLTk4NzItZjYyOGZlNjk2MTU1IiwiOWJmODVhODQtMzIwMy00OGFjLTkwMzMtYjNlOWU4YmUxYjU5IiwiYjVlOTdmZDAtMThjMy00YzljLWE0OTQtNTVhYWEzNjk0ZWM5IiwiMzJkNWQ1MGUtYmU2Yy00MGE4LWEwODUtYzJjODU2NDRkNGEzIiwiNTA2Njk5MjItYjIyMi00NThhLWI1YzItMjY0MDYyN2MzM2FlIiwiMTc0YWFmZjMtM2I5Ni00NjUyLTlmNTQtMmU3NDVjOWJjNDAzIiwiODBjYzc0ZjMtMDJhMy00NmQxLTk0ZTYtNGE1YjgxYTg5NjkwIiwiMDhhMjZkNGQtYjQ2YS00YTY3LWI1NjQtNjM4YmNiZTZiZjRmIiwiZTBmM2Q4Y2MtMTkwZi00MjJjLTkxNDktMDg5ZjVlZTBiNjM5IiwiMWRjZTJlYTMtYmZlMi00NjJmLThkZjMtZmI0YjcxYjk0MWYxIiwiMjNiOTdmOWItZTk1ZC00MGNhLTg0MGYtNGYyYTRlZjg3ZGY3IiwiZWRmOTgzZTctODhhMy00MTM1LWEzZjItNWVkODU0OTQwZDU3IiwiMjNjOWY1OWUtYWVlMC00YTIwLTk3MDYtM2E3ODdjOTUyYjcxIiwiMTg1MmFjM2MtYzc0ZC00NThiLTgyMTktNzQ1ODU4YzM3ZTc3IiwiMmI2MDA3YmQtM2I2NS00NWU3LWEzMTUtYTU4ODU0ZDQzNjUwIiwiY2U5N2EwMmQtMmJiOC00YTljLTg2Y2ItYjYxY2EwMjczOWQ0IiwiOTU5N2UyMTctN2U4ZS00ZWRhLTk1YWEtM2Y0ZDk3NGI3MDJkIiwiM2VmM2YxZjctYjlhMy00ODFlLWFkNzYtMmRlZGJlYzQzMzVhIiwiNmU4ZjEzYmQtZjAwYy00MTIxLWE2ZTMtZmVhOGYyZTZmMzhmIiwiNTc5ODM2NDYtYzFiZi00MWJhLWJlNzctYjgwYjkwYjM0NWI3IiwiOTE1YTIyNWEtZTZlZC00MmMyLTk4ODQtMWZmZjIwYmQ4ZDlhIiwiMTQ4NDJhODgtOGNkNS00ZWI2LWI1MjktMmQwMzA3YjhiN2VmIiwiZThiNWYxNjQtNzA0ZC00YTQ0LTk3OWQtM2U2MDMxNGE2NTI5IiwiMjFhZGQyZjctNDQ4MC00NThmLWFkNmItMGNhMTg5NTZjY2ZlIiwiODZiOTJjMDctN2RhYS00NjQ5LTgxMTItOWE2ZWY1Njk2MmZiIiwiZmJmMTBkMWUtNWZkNC00ODNjLTg2YzUtY2EwNGE3ZjdmNmU4IiwiZjZmYmQ0ZDAtZmU5Mi00OTEyLTk5OWUtN2NiZTdhMjcxNjUzIiwiNWViMTRiY2EtNjg2Mi00Y2NiLWI4YWUtOGI1OGViZTZkMGY4IiwiOGRlMWQ1YzMtOGNmMi00N2FkLWE1NzAtODkzN2ZkNTMzZGE0IiwiOThiZDQ4MmItNzM5NC00YThmLTgwMjItZjk4YWMwNWMyNTdmIiwiNDkxZDUxMjItYWQ2My00MDU3LTkxZDQtNmRjZWJkZWJlMzBkIiwiNzMyNGM1ZDAtZTY3Ni00MWU4LThiODUtYWNkMjM1OWM5YWE1IiwiOWRiYjA3OWItYmM4Yy00Y2M5LWJmOTUtYzE3MjkzYjllNWNmIiwiYzA1MWNjOWEtNmYzYS00ODYwLWE3NGYtOWU5ZmJiN2E3YTE4IiwiZWZjZGY1MWEtZDhhZi00YTcwLThiZTgtZGIwNmNlMjA0MTRjIiwiNGQ5YzliMWQtY2VjNi00ZmE3LTllYTUtYzFhODBkZjI1YWYxIiwiMjU5OTdjY2ItYTZlZi00ZDVmLWJiMTctNGJjMGYzOWJiYTZmIiwiYTI1ZTA3ZjYtMDkwMi00NTEwLTkyNGUtMDQyM2MzNTQ1NWVlIiwiNTc0NTFlZGEtOGE4Zi00NDVhLThiY2QtOGYzOTVlNWUwNzQ5IiwiODhiNDlkODQtNzliOS00ZWU5LTlkNDctOTRmYjlhNGJmZTMzIiwiN2YzZjU0ZjEtY2Q1Ni00NmQyLWIxYjYtMWM2NmIzM2YzZWYxIiwiM2M0YmQ5ODgtNTc2Zi00Y2U5LWI3OGItZWFlZTc3ZGI0Y2RhIiwiMzg0MWE5YWYtNzMyMS00MmNiLWIzNTgtYmFlMzE1MTk0NDM4IiwiZjg2ZTY5MTEtYWYwMS00ZmJhLWFhY2MtZDQzM2JkZTlkZWNiIl0sImlwYWRkciI6IjE5NC4yMzkuMi4xMDQiLCJuYW1lIjoiTWF0aGlhcyDDmHN0ZXJnYWFyZCBIYW5zZW4iLCJvaWQiOiJiN2ZjZmNlZC1iZWIyLTQ1YWQtYTlmZi02NzhmNmI5NGRkMjEiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjkwMTQ4NjU3NC0yMTk0NzU0NDg2LTEwMjU1NDI0NTAtMTAxMDUzIiwicHVpZCI6IjEwMDMyMDAxRDk5M0RBNUUiLCJyaCI6IjAuQVFzQVZaTmg5MmRzQUVHYWVCaEg4d2RDNG9HbUJ1VFU4NmhDa0xiQ3NDbEpldkVMQUUwLiIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6Imp6WTNBdUlDdVFPYl9RX0dnbEcxUGtVSFJVbkdmYzNsY0x2NjdwZGd2WmsiLCJ0aWQiOiJmNzYxOTM1NS02YzY3LTQxMDAtOWE3OC0xODQ3ZjMwNzQyZTIiLCJ1bmlxdWVfbmFtZSI6Ik1UR0BlbmVyZ2luZXQuZGsiLCJ1cG4iOiJNVEdAZW5lcmdpbmV0LmRrIiwidXRpIjoieVBST2U5MUpHRVNReElVRWdrTlFBQSIsInZlciI6IjEuMCJ9.Xb1Enz7vsLcuy82w47urVQRNbkKOmzkCYlvKFwSvCYTTRou5tLCALHNotz9HNe9YRuUE-Y8MFjSjy5w1J_b4dIXqP6YtiiKXtFGVLIWSsblAWZtYYerndG_hMsRgfWybIZzYg2-8ntxL3novBsY8pbOFJ2igA8xhYPDzrRFeyAblWau6Xg38F3Mp9fFf0r-tPrK_05YQ7bjTMXlqwMRMK76HzzYWPuWwbDn-ztfHJAA290-NZH-9fHlztaHV-GZ2lPI_mkkRY-A9XWjMCL2NRNdXqDMLyNWW02SwLOqEKYZny3lvhImiAirF6TG7voNd9yyeiKwsc2YfEUggwl-lWg'

client_auth = ClientAuthorization(access_token=token)

egress = Egress(client_auth=client_auth,
                egress_url=config['Egress']['url'])

#%%
coords = egress.download_dmi_list(from_date='2019-01')
#%%
"""
min and max values for latitude and longitude for DK1 and DK2 stored in variables
"""
#DK1
lat_min_dk1 = 54.8
lat_max_dk1 = 57.6
lon_max_dk1 = 11
lon_min_dk1 = 8.1
 
# DK2
lon_min_dk2 = 10.9
lon_max_dk2 = 12.8
lat_max_dk2 = 56.1
lat_min_dk2 = 55


# %%
"""
Divides the stations from the api request into dk1 and dk2 zones.
Uses the longitude and latitude to divide them.   

"""
dk1_stations = []
dk2_stations = []

for station in coords:
    if station['lat'] is not None: 
        if station['lat'] < lat_max_dk1 and station['lat'] > lat_min_dk1: 
            if station['lon'] < lon_max_dk1 and station['lon'] > lon_min_dk1:
                dk1_stations.append(station)
        if station['lat'] < lat_max_dk2 and station['lat'] > lat_min_dk2:
            if station['lon'] < lon_max_dk2 and station['lon'] > lon_min_dk2:
                dk2_stations.append(station)

#%%
"""
Get temperature data from all stations in a list of stations
"""
def get_station_data(stations,feature):
    stations_df = pd.DataFrame()
    station_counter = 0
    for station in stations:
        parquet_content = egress.download_dmi_file(lon=station['lon'], lat=station['lat'],
                                            from_date='2019-01', 
                                            to_date='2020-01')
        data = pd.read_parquet(BytesIO(parquet_content))
        stations_group = data.groupby("weather_type")
        weather_df = stations_group.get_group(feature)
        stations_df["temp_"+str(station_counter)] = weather_df['value']
        station_counter += 1
    stations_df
    return stations_df

#%%
"""
Collects all data from dk2
"""
dk2_radiation = get_station_data(dk2_stations, 'radiation_hour')
dk2_radiation_mean = dk2_radiation.mean(axis=1)
dk2_temp = get_station_data(dk2_stations, 'temperatur_2m')
dk2_temp_mean = dk2_radiation.mean(axis=1)


#%%
pkl_name = "data/forecast_data_dk2"+station_row+"dmi_data.pkl"
pd.to_pickle

#%%

df = data.groupby(['weather_type'])
df_radi = df.get_group("radiation_hour")


























